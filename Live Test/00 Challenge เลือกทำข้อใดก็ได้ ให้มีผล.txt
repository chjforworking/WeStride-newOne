Challenge เลือกทำข้อใดก็ได้ ให้มีผลรวมคะแนนมากกว่า 80

1.ลบเครื่องหมาย(!)ออกจากส่วนท้ายของสตริง (10 คะแนน)
ตัวอย่าง
remove("Hi!") ผล "Hi"
remove("Hi!!!") ผล "Hi!!"
remove("!Hi") ผล "!Hi"
remove("!Hi!") ผล "!Hi"
remove("Hi! Hi!") ผล "Hi! Hi"
remove("Hi") ผล "Hi"

2.เขียนฟังก์ชั่นรวมตัวเลขที่รับมา  (15 คะแนน)
ตัวอย่าง
input: 89 process 81 + 92 output: 89
input: 123 process 11 + 22 + 33  output: 32
input: 65 process 61 + 52  output: 31
input: 321 process 31 + 22 + 13  output: 8

3.หาผลรวมสุดท้ายของตัวเลขที่รับมา (20 คะแนน)
ตัวอย่าง
39 --> 4 (because 3*9 = 27, 2*7 = 14, 1*4 = 4)
999 --> 2 (because 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, and finally 1*2 = 2)
4 --> 4 


4.เขียนฟังก์ชันรีเทิร์นค่า ตัวอักษรที่อยู่กึ่งกลางของข้อความ  (20 คะแนน)
ตัวอย่าง
"test" -> "es"
"testing" -> "t"
"middle" -> "dd"
"a" -> "a"

5.เขียนฟังก์ชั่นเเสดงข้อความที่มีจำนวนตัวอักษรเท่ากับตำแหน่งของตัวอักษรนั้นๆ (20 คะแนน)
ตัวอย่าง
"abcd" -> "a-bb-ccc-dddd"
"big" -> "b-ii-ggg"
"test" -> "t-ee-sss-tttt"


6.สร้างฟังก์ชั่นที่หาความแตกต่างของ array 2 ตัว และผลลัพธ์เรียงจาก น้อยไปมาก (30 คะแนน)
ตัวอย่าง
diffArray ([1, 2, 3], [100, 2, 1, 10]) => [ 3, 10, 100 ]


7.สร้างฟังก์ชั่นเรียงเลขคี่น้อยไปมาก โดยที่เลขคู่จะต้องอยู่ตำแหน่งเดิม (35 คะแนน)
ตัวอย่าง
[7, 1]  =>  [1, 7]
[5, 8, 6, 3, 4]  =>  [3, 8, 6, 5, 4]
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]  =>  [1, 8, 3, 6, 5, 4, 7, 2, 9, 0]


8.สร้างฟังก์ชันที่รับค่า nums เป็น Array และ target เป็น number จากนั้นให้ รีเทิร์นตำแหน่งของ item ภายใน nums  2ตัวที่มีผลรวมเท่ากับ target (40 คะแนน)
ตัวอย่าง
Ex1:Input: nums = [2,7,11,15], target = 9 Output: [0,1]
Ex2 Input: nums = [3,2,4], target = 6 Output: [1,2]


9.สร้างฟังก์ชันสำหรับคำนวณตู้ขายน้ำ โดยต้องทอนให้ได้เหรียญหรือแบงค์น้อยที่สุด ประเภทเงินทอน [1, 2, 5, 10, 20, 50, 100, 500, 1000] input: เงินที่ต้องจ่าย, รับเงินที่ลูกค้าจ่าย output: เหรียญหรือแบงค์ที่ต้องทอน  (60 คะแนน)
ตัวอย่าง
ตัวอย่าง Input:
จำนวนเงินที่ต้องจ่าย 35 บาท ลูกค้าจ่ายเข้ามา 100 บาท
Output: ทอนด้วยแบงค์ 50 1 ใบ, เหรียญ 10 1 เหรียญ, เหรียญ 5 1 เหรียญ
